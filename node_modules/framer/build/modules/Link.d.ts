import React from "react";
import { RouterAPI } from "../router/index.js";
export interface LinkProps {
    href: string | undefined;
    /**
     * Which browsing context to display the linked URL. If not provided, the
     * Link component will only open the link in a new tab if the href is an
     * external URL.
     */
    openInNewTab?: boolean;
    smoothScroll?: boolean;
}
export interface PropsAddedByLink {
    href?: string;
    target?: string;
    rel?: string;
    onClick?: (event: React.MouseEvent<HTMLAnchorElement>) => void;
    "data-framer-page-link-current"?: true | undefined;
}
/**
 * @internal
 */
export declare enum AnchorLinkTarget {
    _blank = "_blank",
    _self = "_self"
}
/**
 * @internal
 */
export declare function isValidAnchorLinkTargetValue(value: unknown): value is AnchorLinkTarget | undefined;
/**
 * @internal
 */
export declare function inferDefaultLinkTarget(link: unknown): AnchorLinkTarget | undefined;
declare type LinkAttributes = Pick<React.AnchorHTMLAttributes<HTMLAnchorElement>, "href" | "rel" | "target">;
export declare function propsForLink(href: string, openInNewTab?: boolean | undefined): LinkAttributes;
/** @public */
export declare const Link: React.ForwardRefExoticComponent<LinkProps & {
    children?: React.ReactNode;
} & React.RefAttributes<unknown>>;
/** @public */
export declare function resolveLink(href: string, router: Partial<RouterAPI>, implicitPathVariables?: Record<string, unknown>): string | undefined;
export {};
//# sourceMappingURL=Link.d.ts.map